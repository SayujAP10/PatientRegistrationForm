//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatientRegistration
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalEntities : DbContext
    {
        public HospitalEntities()
            : base("name=HospitalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<patient> patients { get; set; }
    
        public virtual int sp_Insert(string na, string add, Nullable<int> pin, string adno, string mob, string bld, Nullable<System.DateTime> visit, string purpose)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var addParameter = add != null ?
                new ObjectParameter("add", add) :
                new ObjectParameter("add", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var adnoParameter = adno != null ?
                new ObjectParameter("adno", adno) :
                new ObjectParameter("adno", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var bldParameter = bld != null ?
                new ObjectParameter("bld", bld) :
                new ObjectParameter("bld", typeof(string));
    
            var visitParameter = visit.HasValue ?
                new ObjectParameter("visit", visit) :
                new ObjectParameter("visit", typeof(System.DateTime));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("purpose", purpose) :
                new ObjectParameter("purpose", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert", naParameter, addParameter, pinParameter, adnoParameter, mobParameter, bldParameter, visitParameter, purposeParameter);
        }
    
        public virtual int sp_login(string na, string aadhar, ObjectParameter status)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var aadharParameter = aadhar != null ?
                new ObjectParameter("aadhar", aadhar) :
                new ObjectParameter("aadhar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", naParameter, aadharParameter, status);
        }
    
        public virtual ObjectResult<sp_profile_Result> sp_profile(string na)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_profile_Result>("sp_profile", naParameter);
        }
    
        public virtual int sp_edit(string na, string add, Nullable<int> pin, string mob, string blood)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var addParameter = add != null ?
                new ObjectParameter("add", add) :
                new ObjectParameter("add", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var bloodParameter = blood != null ?
                new ObjectParameter("blood", blood) :
                new ObjectParameter("blood", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_edit", naParameter, addParameter, pinParameter, mobParameter, bloodParameter);
        }
    }
}
